package "stabilitytest"

import "flatlang/time/Timer"
import "flatlang/time/DateTime"
import "flatlang/time/DateTime.InvalidDateException"
import "flatlang/time/Interval"
import "flatlang/time/BoundedInterval"
import "flatlang/time/Interval.InvalidIntervalException"
import "flatlang/thread/Thread"

import "novex/nest/Nest"
import "novex/nest/TestSuite"

import static "novex/nest/Nest"

testable class BoundedIntervalStability {
    test invalidUnboundedIntervalBounds() {
        expect({ new BoundedInterval(null, null) }).toThrow(InvalidIntervalException.class)
        expect({ new BoundedInterval(null, new DateTime(year: 5)) }).toThrow(InvalidIntervalException.class)
        expect({ new BoundedInterval(new DateTime(year: 5), null) }).toThrow(InvalidIntervalException.class)
    }

    test invalidIntervalBounds() {
        expect({
            new Interval(
                new DateTime(year: 2017),
                new DateTime(year: 2016)
            )
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6),
                new DateTime(year: 2017, month: 5))
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5),
                new DateTime(year: 2017, month: 6, dayOfMonth: 4))
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 3))
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 2))
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 2),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 1))
        }).toThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(
                    year: 2017,
                    month: 6,
                    dayOfMonth: 5,
                    hour: 4,
                    minute: 3,
                    second: 2,
                    millisecond: 1),
                new DateTime(
                    year: 2017,
                    month: 6,
                    dayOfMonth: 5,
                    hour: 4,
                    minute: 3,
                    second: 2,
                    millisecond: 0))
        }).toThrow(InvalidIntervalException.class)
    }

    test validIntervalBounds() {
        expect({
            new Interval(
                new DateTime(year: 0),
                new DateTime(year: 0))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2016),
                new DateTime(year: 2017))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 5),
                new DateTime(year: 2017, month: 6))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 4),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 3),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 2),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 1),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 2))
        }).toNotThrow(InvalidIntervalException.class)

        expect({
            new Interval(
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 2, millisecond: 0),
                new DateTime(year: 2017, month: 6, dayOfMonth: 5, hour: 4, minute: 3, second: 2, millisecond: 1))
        }).toNotThrow(InvalidIntervalException.class)
    }
}