package "stabilitytest"

import "novex/nest/Nest"
import "novex/nest/TestSuite"

import static "novex/nest/Nest"

testable class ExceptionStability {
    [Test message: false]
    public test() {
        expect({ testException(out) }).toThrow(Exception.class, "Failed to catch exception")

        var worked = false

        try {
            testSoftExceptions(out)
        } catch all (DivideByZeroException e) {
            worked = true

            out.writeLine("- Success")
        }

        expect(worked).toBe(true, "Failed to catch soft Exception")
    }

    testException(OutputStream out) {
        try {
            out.write("Testing DivideByZeroException ")

            try {
                // Int den = 0
                // Int i   = 43 / den

                throw new DivideByZeroException()
            } catch (DivideByZeroException e) {
                out.writeLine("- Success")
                out.write("Testing StabilityTestException ")

                throw new StabilityTestException()
            }

            fail("Failed to catch DivideByZeroException")
        } catch (StabilityTestException e) {
            out.writeLine("- Success")

            throw new Exception()
        }

        fail("Failed to catch StabilityTestException")
    }

    testSoftExceptions(OutputStream out) {
        var worked = false

        try {
            out.write("Testing soft exception without a soft catch ")

            toss new StabilityTestException()

            worked = true

            out.writeLine("- Success")
        } catch (StabilityTestException e) {
            fail("Caught soft exception without soft keyword")
        }

        expect(worked).toBe(true, "Failed to throw soft without corresponding catch")

        out.write("Testing soft exception with a soft catch ")

        toss new DivideByZeroException()

        fail("Failed to exit subroutine after throwing soft Exception")
    }
}